#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Biblioteca_WebForms.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PFBiblioteca")]
	public partial class DataLinQ_BibliotecaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAlquiler(Alquiler instance);
    partial void UpdateAlquiler(Alquiler instance);
    partial void DeleteAlquiler(Alquiler instance);
    partial void InsertUbicacion(Ubicacion instance);
    partial void UpdateUbicacion(Ubicacion instance);
    partial void DeleteUbicacion(Ubicacion instance);
    partial void InsertAlquilerEjemplar(AlquilerEjemplar instance);
    partial void UpdateAlquilerEjemplar(AlquilerEjemplar instance);
    partial void DeleteAlquilerEjemplar(AlquilerEjemplar instance);
    partial void InsertAutor(Autor instance);
    partial void UpdateAutor(Autor instance);
    partial void DeleteAutor(Autor instance);
    partial void InsertBibliotecario(Bibliotecario instance);
    partial void UpdateBibliotecario(Bibliotecario instance);
    partial void DeleteBibliotecario(Bibliotecario instance);
    partial void InsertEditorial(Editorial instance);
    partial void UpdateEditorial(Editorial instance);
    partial void DeleteEditorial(Editorial instance);
    partial void InsertEjemplar(Ejemplar instance);
    partial void UpdateEjemplar(Ejemplar instance);
    partial void DeleteEjemplar(Ejemplar instance);
    partial void InsertGenero(Genero instance);
    partial void UpdateGenero(Genero instance);
    partial void DeleteGenero(Genero instance);
    partial void InsertIdioma(Idioma instance);
    partial void UpdateIdioma(Idioma instance);
    partial void DeleteIdioma(Idioma instance);
    partial void InsertObra(Obra instance);
    partial void UpdateObra(Obra instance);
    partial void DeleteObra(Obra instance);
    partial void InsertSocio(Socio instance);
    partial void UpdateSocio(Socio instance);
    partial void DeleteSocio(Socio instance);
    #endregion
		
		public DataLinQ_BibliotecaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLinQ_BibliotecaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLinQ_BibliotecaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLinQ_BibliotecaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Alquiler> Alquilers
		{
			get
			{
				return this.GetTable<Alquiler>();
			}
		}
		
		public System.Data.Linq.Table<Ubicacion> Ubicacions
		{
			get
			{
				return this.GetTable<Ubicacion>();
			}
		}
		
		public System.Data.Linq.Table<AlquilerEjemplar> AlquilerEjemplars
		{
			get
			{
				return this.GetTable<AlquilerEjemplar>();
			}
		}
		
		public System.Data.Linq.Table<Autor> Autors
		{
			get
			{
				return this.GetTable<Autor>();
			}
		}
		
		public System.Data.Linq.Table<Bibliotecario> Bibliotecarios
		{
			get
			{
				return this.GetTable<Bibliotecario>();
			}
		}
		
		public System.Data.Linq.Table<Editorial> Editorials
		{
			get
			{
				return this.GetTable<Editorial>();
			}
		}
		
		public System.Data.Linq.Table<Ejemplar> Ejemplars
		{
			get
			{
				return this.GetTable<Ejemplar>();
			}
		}
		
		public System.Data.Linq.Table<Genero> Generos
		{
			get
			{
				return this.GetTable<Genero>();
			}
		}
		
		public System.Data.Linq.Table<Idioma> Idiomas
		{
			get
			{
				return this.GetTable<Idioma>();
			}
		}
		
		public System.Data.Linq.Table<Obra> Obras
		{
			get
			{
				return this.GetTable<Obra>();
			}
		}
		
		public System.Data.Linq.Table<Socio> Socios
		{
			get
			{
				return this.GetTable<Socio>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alquiler")]
	public partial class Alquiler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAlquiler;
		
		private System.DateTime _FechaAlquiler;
		
		private System.DateTime _FechaDevProbable;
		
		private int _FKSocio;
		
		private int _FKBibliotecario;
		
		private EntitySet<AlquilerEjemplar> _AlquilerEjemplars;
		
		private EntityRef<Bibliotecario> _Bibliotecario;
		
		private EntityRef<Socio> _Socio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAlquilerChanging(int value);
    partial void OnIdAlquilerChanged();
    partial void OnFechaAlquilerChanging(System.DateTime value);
    partial void OnFechaAlquilerChanged();
    partial void OnFechaDevProbableChanging(System.DateTime value);
    partial void OnFechaDevProbableChanged();
    partial void OnFKSocioChanging(int value);
    partial void OnFKSocioChanged();
    partial void OnFKBibliotecarioChanging(int value);
    partial void OnFKBibliotecarioChanged();
    #endregion
		
		public Alquiler()
		{
			this._AlquilerEjemplars = new EntitySet<AlquilerEjemplar>(new Action<AlquilerEjemplar>(this.attach_AlquilerEjemplars), new Action<AlquilerEjemplar>(this.detach_AlquilerEjemplars));
			this._Bibliotecario = default(EntityRef<Bibliotecario>);
			this._Socio = default(EntityRef<Socio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAlquiler", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAlquiler
		{
			get
			{
				return this._IdAlquiler;
			}
			set
			{
				if ((this._IdAlquiler != value))
				{
					this.OnIdAlquilerChanging(value);
					this.SendPropertyChanging();
					this._IdAlquiler = value;
					this.SendPropertyChanged("IdAlquiler");
					this.OnIdAlquilerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlquiler", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlquiler
		{
			get
			{
				return this._FechaAlquiler;
			}
			set
			{
				if ((this._FechaAlquiler != value))
				{
					this.OnFechaAlquilerChanging(value);
					this.SendPropertyChanging();
					this._FechaAlquiler = value;
					this.SendPropertyChanged("FechaAlquiler");
					this.OnFechaAlquilerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaDevProbable", DbType="Date NOT NULL")]
		public System.DateTime FechaDevProbable
		{
			get
			{
				return this._FechaDevProbable;
			}
			set
			{
				if ((this._FechaDevProbable != value))
				{
					this.OnFechaDevProbableChanging(value);
					this.SendPropertyChanging();
					this._FechaDevProbable = value;
					this.SendPropertyChanged("FechaDevProbable");
					this.OnFechaDevProbableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKSocio", DbType="Int NOT NULL")]
		public int FKSocio
		{
			get
			{
				return this._FKSocio;
			}
			set
			{
				if ((this._FKSocio != value))
				{
					if (this._Socio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKSocioChanging(value);
					this.SendPropertyChanging();
					this._FKSocio = value;
					this.SendPropertyChanged("FKSocio");
					this.OnFKSocioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKBibliotecario", DbType="Int NOT NULL")]
		public int FKBibliotecario
		{
			get
			{
				return this._FKBibliotecario;
			}
			set
			{
				if ((this._FKBibliotecario != value))
				{
					if (this._Bibliotecario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKBibliotecarioChanging(value);
					this.SendPropertyChanging();
					this._FKBibliotecario = value;
					this.SendPropertyChanged("FKBibliotecario");
					this.OnFKBibliotecarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alquiler_AlquilerEjemplar", Storage="_AlquilerEjemplars", ThisKey="IdAlquiler", OtherKey="FKAlquiler")]
		public EntitySet<AlquilerEjemplar> AlquilerEjemplars
		{
			get
			{
				return this._AlquilerEjemplars;
			}
			set
			{
				this._AlquilerEjemplars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bibliotecario_Alquiler", Storage="_Bibliotecario", ThisKey="FKBibliotecario", OtherKey="IdBibliotecario", IsForeignKey=true)]
		public Bibliotecario Bibliotecario
		{
			get
			{
				return this._Bibliotecario.Entity;
			}
			set
			{
				Bibliotecario previousValue = this._Bibliotecario.Entity;
				if (((previousValue != value) 
							|| (this._Bibliotecario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bibliotecario.Entity = null;
						previousValue.Alquilers.Remove(this);
					}
					this._Bibliotecario.Entity = value;
					if ((value != null))
					{
						value.Alquilers.Add(this);
						this._FKBibliotecario = value.IdBibliotecario;
					}
					else
					{
						this._FKBibliotecario = default(int);
					}
					this.SendPropertyChanged("Bibliotecario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Socio_Alquiler", Storage="_Socio", ThisKey="FKSocio", OtherKey="IdSocio", IsForeignKey=true)]
		public Socio Socio
		{
			get
			{
				return this._Socio.Entity;
			}
			set
			{
				Socio previousValue = this._Socio.Entity;
				if (((previousValue != value) 
							|| (this._Socio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Socio.Entity = null;
						previousValue.Alquilers.Remove(this);
					}
					this._Socio.Entity = value;
					if ((value != null))
					{
						value.Alquilers.Add(this);
						this._FKSocio = value.IdSocio;
					}
					else
					{
						this._FKSocio = default(int);
					}
					this.SendPropertyChanged("Socio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlquilerEjemplars(AlquilerEjemplar entity)
		{
			this.SendPropertyChanging();
			entity.Alquiler = this;
		}
		
		private void detach_AlquilerEjemplars(AlquilerEjemplar entity)
		{
			this.SendPropertyChanging();
			entity.Alquiler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ubicacion")]
	public partial class Ubicacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUbicacion;
		
		private int _Estanteria;
		
		private string _Fila;
		
		private string _Columna;
		
		private EntitySet<Ejemplar> _Ejemplars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUbicacionChanging(int value);
    partial void OnIdUbicacionChanged();
    partial void OnEstanteriaChanging(int value);
    partial void OnEstanteriaChanged();
    partial void OnFilaChanging(string value);
    partial void OnFilaChanged();
    partial void OnColumnaChanging(string value);
    partial void OnColumnaChanged();
    #endregion
		
		public Ubicacion()
		{
			this._Ejemplars = new EntitySet<Ejemplar>(new Action<Ejemplar>(this.attach_Ejemplars), new Action<Ejemplar>(this.detach_Ejemplars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUbicacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUbicacion
		{
			get
			{
				return this._IdUbicacion;
			}
			set
			{
				if ((this._IdUbicacion != value))
				{
					this.OnIdUbicacionChanging(value);
					this.SendPropertyChanging();
					this._IdUbicacion = value;
					this.SendPropertyChanged("IdUbicacion");
					this.OnIdUbicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estanteria", DbType="Int NOT NULL")]
		public int Estanteria
		{
			get
			{
				return this._Estanteria;
			}
			set
			{
				if ((this._Estanteria != value))
				{
					this.OnEstanteriaChanging(value);
					this.SendPropertyChanging();
					this._Estanteria = value;
					this.SendPropertyChanged("Estanteria");
					this.OnEstanteriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fila", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Fila
		{
			get
			{
				return this._Fila;
			}
			set
			{
				if ((this._Fila != value))
				{
					this.OnFilaChanging(value);
					this.SendPropertyChanging();
					this._Fila = value;
					this.SendPropertyChanged("Fila");
					this.OnFilaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Columna", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Columna
		{
			get
			{
				return this._Columna;
			}
			set
			{
				if ((this._Columna != value))
				{
					this.OnColumnaChanging(value);
					this.SendPropertyChanging();
					this._Columna = value;
					this.SendPropertyChanged("Columna");
					this.OnColumnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ubicacion_Ejemplar", Storage="_Ejemplars", ThisKey="IdUbicacion", OtherKey="FkUbicacion")]
		public EntitySet<Ejemplar> Ejemplars
		{
			get
			{
				return this._Ejemplars;
			}
			set
			{
				this._Ejemplars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ejemplars(Ejemplar entity)
		{
			this.SendPropertyChanging();
			entity.Ubicacion = this;
		}
		
		private void detach_Ejemplars(Ejemplar entity)
		{
			this.SendPropertyChanging();
			entity.Ubicacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlquilerEjemplar")]
	public partial class AlquilerEjemplar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAlquilerEjemplar;
		
		private int _FKAlquiler;
		
		private int _FKEjemplar;
		
		private System.Nullable<System.DateTime> _FechaDevReal;
		
		private EntityRef<Alquiler> _Alquiler;
		
		private EntityRef<Ejemplar> _Ejemplar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAlquilerEjemplarChanging(int value);
    partial void OnIdAlquilerEjemplarChanged();
    partial void OnFKAlquilerChanging(int value);
    partial void OnFKAlquilerChanged();
    partial void OnFKEjemplarChanging(int value);
    partial void OnFKEjemplarChanged();
    partial void OnFechaDevRealChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaDevRealChanged();
    #endregion
		
		public AlquilerEjemplar()
		{
			this._Alquiler = default(EntityRef<Alquiler>);
			this._Ejemplar = default(EntityRef<Ejemplar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAlquilerEjemplar", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAlquilerEjemplar
		{
			get
			{
				return this._IdAlquilerEjemplar;
			}
			set
			{
				if ((this._IdAlquilerEjemplar != value))
				{
					this.OnIdAlquilerEjemplarChanging(value);
					this.SendPropertyChanging();
					this._IdAlquilerEjemplar = value;
					this.SendPropertyChanged("IdAlquilerEjemplar");
					this.OnIdAlquilerEjemplarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKAlquiler", DbType="Int NOT NULL")]
		public int FKAlquiler
		{
			get
			{
				return this._FKAlquiler;
			}
			set
			{
				if ((this._FKAlquiler != value))
				{
					if (this._Alquiler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKAlquilerChanging(value);
					this.SendPropertyChanging();
					this._FKAlquiler = value;
					this.SendPropertyChanged("FKAlquiler");
					this.OnFKAlquilerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKEjemplar", DbType="Int NOT NULL")]
		public int FKEjemplar
		{
			get
			{
				return this._FKEjemplar;
			}
			set
			{
				if ((this._FKEjemplar != value))
				{
					if (this._Ejemplar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKEjemplarChanging(value);
					this.SendPropertyChanging();
					this._FKEjemplar = value;
					this.SendPropertyChanged("FKEjemplar");
					this.OnFKEjemplarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaDevReal", DbType="Date")]
		public System.Nullable<System.DateTime> FechaDevReal
		{
			get
			{
				return this._FechaDevReal;
			}
			set
			{
				if ((this._FechaDevReal != value))
				{
					this.OnFechaDevRealChanging(value);
					this.SendPropertyChanging();
					this._FechaDevReal = value;
					this.SendPropertyChanged("FechaDevReal");
					this.OnFechaDevRealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alquiler_AlquilerEjemplar", Storage="_Alquiler", ThisKey="FKAlquiler", OtherKey="IdAlquiler", IsForeignKey=true)]
		public Alquiler Alquiler
		{
			get
			{
				return this._Alquiler.Entity;
			}
			set
			{
				Alquiler previousValue = this._Alquiler.Entity;
				if (((previousValue != value) 
							|| (this._Alquiler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alquiler.Entity = null;
						previousValue.AlquilerEjemplars.Remove(this);
					}
					this._Alquiler.Entity = value;
					if ((value != null))
					{
						value.AlquilerEjemplars.Add(this);
						this._FKAlquiler = value.IdAlquiler;
					}
					else
					{
						this._FKAlquiler = default(int);
					}
					this.SendPropertyChanged("Alquiler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ejemplar_AlquilerEjemplar", Storage="_Ejemplar", ThisKey="FKEjemplar", OtherKey="IdEjemplar", IsForeignKey=true)]
		public Ejemplar Ejemplar
		{
			get
			{
				return this._Ejemplar.Entity;
			}
			set
			{
				Ejemplar previousValue = this._Ejemplar.Entity;
				if (((previousValue != value) 
							|| (this._Ejemplar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ejemplar.Entity = null;
						previousValue.AlquilerEjemplars.Remove(this);
					}
					this._Ejemplar.Entity = value;
					if ((value != null))
					{
						value.AlquilerEjemplars.Add(this);
						this._FKEjemplar = value.IdEjemplar;
					}
					else
					{
						this._FKEjemplar = default(int);
					}
					this.SendPropertyChanged("Ejemplar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autor")]
	public partial class Autor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAutor;
		
		private string _Apellido1;
		
		private string _Apellido2;
		
		private string _Nombre;
		
		private EntitySet<Obra> _Obras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAutorChanging(int value);
    partial void OnIdAutorChanged();
    partial void OnApellido1Changing(string value);
    partial void OnApellido1Changed();
    partial void OnApellido2Changing(string value);
    partial void OnApellido2Changed();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Autor()
		{
			this._Obras = new EntitySet<Obra>(new Action<Obra>(this.attach_Obras), new Action<Obra>(this.detach_Obras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAutor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAutor
		{
			get
			{
				return this._IdAutor;
			}
			set
			{
				if ((this._IdAutor != value))
				{
					this.OnIdAutorChanging(value);
					this.SendPropertyChanging();
					this._IdAutor = value;
					this.SendPropertyChanged("IdAutor");
					this.OnIdAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido1", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Apellido1
		{
			get
			{
				return this._Apellido1;
			}
			set
			{
				if ((this._Apellido1 != value))
				{
					this.OnApellido1Changing(value);
					this.SendPropertyChanging();
					this._Apellido1 = value;
					this.SendPropertyChanged("Apellido1");
					this.OnApellido1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido2", DbType="VarChar(40)")]
		public string Apellido2
		{
			get
			{
				return this._Apellido2;
			}
			set
			{
				if ((this._Apellido2 != value))
				{
					this.OnApellido2Changing(value);
					this.SendPropertyChanging();
					this._Apellido2 = value;
					this.SendPropertyChanged("Apellido2");
					this.OnApellido2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(40)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autor_Obra", Storage="_Obras", ThisKey="IdAutor", OtherKey="FKAutor")]
		public EntitySet<Obra> Obras
		{
			get
			{
				return this._Obras;
			}
			set
			{
				this._Obras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Obras(Obra entity)
		{
			this.SendPropertyChanging();
			entity.Autor = this;
		}
		
		private void detach_Obras(Obra entity)
		{
			this.SendPropertyChanging();
			entity.Autor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bibliotecario")]
	public partial class Bibliotecario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBibliotecario;
		
		private string _Apellido;
		
		private string _Nombre;
		
		private string _Email;
		
		private string _Contrasenia;
		
		private EntitySet<Alquiler> _Alquilers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBibliotecarioChanging(int value);
    partial void OnIdBibliotecarioChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContraseniaChanging(string value);
    partial void OnContraseniaChanged();
    #endregion
		
		public Bibliotecario()
		{
			this._Alquilers = new EntitySet<Alquiler>(new Action<Alquiler>(this.attach_Alquilers), new Action<Alquiler>(this.detach_Alquilers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBibliotecario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBibliotecario
		{
			get
			{
				return this._IdBibliotecario;
			}
			set
			{
				if ((this._IdBibliotecario != value))
				{
					this.OnIdBibliotecarioChanging(value);
					this.SendPropertyChanging();
					this._IdBibliotecario = value;
					this.SendPropertyChanged("IdBibliotecario");
					this.OnIdBibliotecarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contrasenia", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Contrasenia
		{
			get
			{
				return this._Contrasenia;
			}
			set
			{
				if ((this._Contrasenia != value))
				{
					this.OnContraseniaChanging(value);
					this.SendPropertyChanging();
					this._Contrasenia = value;
					this.SendPropertyChanged("Contrasenia");
					this.OnContraseniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bibliotecario_Alquiler", Storage="_Alquilers", ThisKey="IdBibliotecario", OtherKey="FKBibliotecario")]
		public EntitySet<Alquiler> Alquilers
		{
			get
			{
				return this._Alquilers;
			}
			set
			{
				this._Alquilers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alquilers(Alquiler entity)
		{
			this.SendPropertyChanging();
			entity.Bibliotecario = this;
		}
		
		private void detach_Alquilers(Alquiler entity)
		{
			this.SendPropertyChanging();
			entity.Bibliotecario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Editorial")]
	public partial class Editorial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEditorial;
		
		private string _Descripcion;
		
		private EntitySet<Ejemplar> _Ejemplars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEditorialChanging(int value);
    partial void OnIdEditorialChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Editorial()
		{
			this._Ejemplars = new EntitySet<Ejemplar>(new Action<Ejemplar>(this.attach_Ejemplars), new Action<Ejemplar>(this.detach_Ejemplars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEditorial", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEditorial
		{
			get
			{
				return this._IdEditorial;
			}
			set
			{
				if ((this._IdEditorial != value))
				{
					this.OnIdEditorialChanging(value);
					this.SendPropertyChanging();
					this._IdEditorial = value;
					this.SendPropertyChanged("IdEditorial");
					this.OnIdEditorialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Editorial_Ejemplar", Storage="_Ejemplars", ThisKey="IdEditorial", OtherKey="FKEditorial")]
		public EntitySet<Ejemplar> Ejemplars
		{
			get
			{
				return this._Ejemplars;
			}
			set
			{
				this._Ejemplars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ejemplars(Ejemplar entity)
		{
			this.SendPropertyChanging();
			entity.Editorial = this;
		}
		
		private void detach_Ejemplars(Ejemplar entity)
		{
			this.SendPropertyChanging();
			entity.Editorial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ejemplar")]
	public partial class Ejemplar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEjemplar;
		
		private string _CodigoBarras;
		
		private string _ISBN;
		
		private System.Nullable<short> _AnioPublicacion;
		
		private bool _EstaBuenEstado;
		
		private System.Nullable<int> _NumPaginas;
		
		private bool _EstaAlquilado;
		
		private int _FKEditorial;
		
		private int _FKObra;
		
		private System.Nullable<int> _FkUbicacion;
		
		private int _FkIdioma;
		
		private System.Nullable<bool> _EstaActivo;
		
		private EntitySet<AlquilerEjemplar> _AlquilerEjemplars;
		
		private EntityRef<Editorial> _Editorial;
		
		private EntityRef<Ubicacion> _Ubicacion;
		
		private EntityRef<Idioma> _Idioma;
		
		private EntityRef<Obra> _Obra;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEjemplarChanging(int value);
    partial void OnIdEjemplarChanged();
    partial void OnCodigoBarrasChanging(string value);
    partial void OnCodigoBarrasChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnAnioPublicacionChanging(System.Nullable<short> value);
    partial void OnAnioPublicacionChanged();
    partial void OnEstaBuenEstadoChanging(bool value);
    partial void OnEstaBuenEstadoChanged();
    partial void OnNumPaginasChanging(System.Nullable<int> value);
    partial void OnNumPaginasChanged();
    partial void OnEstaAlquiladoChanging(bool value);
    partial void OnEstaAlquiladoChanged();
    partial void OnFKEditorialChanging(int value);
    partial void OnFKEditorialChanged();
    partial void OnFKObraChanging(int value);
    partial void OnFKObraChanged();
    partial void OnFkUbicacionChanging(System.Nullable<int> value);
    partial void OnFkUbicacionChanged();
    partial void OnFkIdiomaChanging(int value);
    partial void OnFkIdiomaChanged();
    partial void OnEstaActivoChanging(System.Nullable<bool> value);
    partial void OnEstaActivoChanged();
    #endregion
		
		public Ejemplar()
		{
			this._AlquilerEjemplars = new EntitySet<AlquilerEjemplar>(new Action<AlquilerEjemplar>(this.attach_AlquilerEjemplars), new Action<AlquilerEjemplar>(this.detach_AlquilerEjemplars));
			this._Editorial = default(EntityRef<Editorial>);
			this._Ubicacion = default(EntityRef<Ubicacion>);
			this._Idioma = default(EntityRef<Idioma>);
			this._Obra = default(EntityRef<Obra>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEjemplar", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEjemplar
		{
			get
			{
				return this._IdEjemplar;
			}
			set
			{
				if ((this._IdEjemplar != value))
				{
					this.OnIdEjemplarChanging(value);
					this.SendPropertyChanging();
					this._IdEjemplar = value;
					this.SendPropertyChanged("IdEjemplar");
					this.OnIdEjemplarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoBarras", DbType="Char(13)")]
		public string CodigoBarras
		{
			get
			{
				return this._CodigoBarras;
			}
			set
			{
				if ((this._CodigoBarras != value))
				{
					this.OnCodigoBarrasChanging(value);
					this.SendPropertyChanging();
					this._CodigoBarras = value;
					this.SendPropertyChanged("CodigoBarras");
					this.OnCodigoBarrasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="VarChar(13)")]
		public string ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnioPublicacion", DbType="SmallInt")]
		public System.Nullable<short> AnioPublicacion
		{
			get
			{
				return this._AnioPublicacion;
			}
			set
			{
				if ((this._AnioPublicacion != value))
				{
					this.OnAnioPublicacionChanging(value);
					this.SendPropertyChanging();
					this._AnioPublicacion = value;
					this.SendPropertyChanged("AnioPublicacion");
					this.OnAnioPublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstaBuenEstado", DbType="Bit NOT NULL")]
		public bool EstaBuenEstado
		{
			get
			{
				return this._EstaBuenEstado;
			}
			set
			{
				if ((this._EstaBuenEstado != value))
				{
					this.OnEstaBuenEstadoChanging(value);
					this.SendPropertyChanging();
					this._EstaBuenEstado = value;
					this.SendPropertyChanged("EstaBuenEstado");
					this.OnEstaBuenEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPaginas", DbType="Int")]
		public System.Nullable<int> NumPaginas
		{
			get
			{
				return this._NumPaginas;
			}
			set
			{
				if ((this._NumPaginas != value))
				{
					this.OnNumPaginasChanging(value);
					this.SendPropertyChanging();
					this._NumPaginas = value;
					this.SendPropertyChanged("NumPaginas");
					this.OnNumPaginasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstaAlquilado", DbType="Bit NOT NULL")]
		public bool EstaAlquilado
		{
			get
			{
				return this._EstaAlquilado;
			}
			set
			{
				if ((this._EstaAlquilado != value))
				{
					this.OnEstaAlquiladoChanging(value);
					this.SendPropertyChanging();
					this._EstaAlquilado = value;
					this.SendPropertyChanged("EstaAlquilado");
					this.OnEstaAlquiladoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKEditorial", DbType="Int NOT NULL")]
		public int FKEditorial
		{
			get
			{
				return this._FKEditorial;
			}
			set
			{
				if ((this._FKEditorial != value))
				{
					if (this._Editorial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKEditorialChanging(value);
					this.SendPropertyChanging();
					this._FKEditorial = value;
					this.SendPropertyChanged("FKEditorial");
					this.OnFKEditorialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKObra", DbType="Int NOT NULL")]
		public int FKObra
		{
			get
			{
				return this._FKObra;
			}
			set
			{
				if ((this._FKObra != value))
				{
					if (this._Obra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKObraChanging(value);
					this.SendPropertyChanging();
					this._FKObra = value;
					this.SendPropertyChanged("FKObra");
					this.OnFKObraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkUbicacion", DbType="Int")]
		public System.Nullable<int> FkUbicacion
		{
			get
			{
				return this._FkUbicacion;
			}
			set
			{
				if ((this._FkUbicacion != value))
				{
					if (this._Ubicacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFkUbicacionChanging(value);
					this.SendPropertyChanging();
					this._FkUbicacion = value;
					this.SendPropertyChanged("FkUbicacion");
					this.OnFkUbicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FkIdioma", DbType="Int NOT NULL")]
		public int FkIdioma
		{
			get
			{
				return this._FkIdioma;
			}
			set
			{
				if ((this._FkIdioma != value))
				{
					if (this._Idioma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFkIdiomaChanging(value);
					this.SendPropertyChanging();
					this._FkIdioma = value;
					this.SendPropertyChanged("FkIdioma");
					this.OnFkIdiomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstaActivo", DbType="Bit")]
		public System.Nullable<bool> EstaActivo
		{
			get
			{
				return this._EstaActivo;
			}
			set
			{
				if ((this._EstaActivo != value))
				{
					this.OnEstaActivoChanging(value);
					this.SendPropertyChanging();
					this._EstaActivo = value;
					this.SendPropertyChanged("EstaActivo");
					this.OnEstaActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ejemplar_AlquilerEjemplar", Storage="_AlquilerEjemplars", ThisKey="IdEjemplar", OtherKey="FKEjemplar")]
		public EntitySet<AlquilerEjemplar> AlquilerEjemplars
		{
			get
			{
				return this._AlquilerEjemplars;
			}
			set
			{
				this._AlquilerEjemplars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Editorial_Ejemplar", Storage="_Editorial", ThisKey="FKEditorial", OtherKey="IdEditorial", IsForeignKey=true)]
		public Editorial Editorial
		{
			get
			{
				return this._Editorial.Entity;
			}
			set
			{
				Editorial previousValue = this._Editorial.Entity;
				if (((previousValue != value) 
							|| (this._Editorial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Editorial.Entity = null;
						previousValue.Ejemplars.Remove(this);
					}
					this._Editorial.Entity = value;
					if ((value != null))
					{
						value.Ejemplars.Add(this);
						this._FKEditorial = value.IdEditorial;
					}
					else
					{
						this._FKEditorial = default(int);
					}
					this.SendPropertyChanged("Editorial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ubicacion_Ejemplar", Storage="_Ubicacion", ThisKey="FkUbicacion", OtherKey="IdUbicacion", IsForeignKey=true)]
		public Ubicacion Ubicacion
		{
			get
			{
				return this._Ubicacion.Entity;
			}
			set
			{
				Ubicacion previousValue = this._Ubicacion.Entity;
				if (((previousValue != value) 
							|| (this._Ubicacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ubicacion.Entity = null;
						previousValue.Ejemplars.Remove(this);
					}
					this._Ubicacion.Entity = value;
					if ((value != null))
					{
						value.Ejemplars.Add(this);
						this._FkUbicacion = value.IdUbicacion;
					}
					else
					{
						this._FkUbicacion = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ubicacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idioma_Ejemplar", Storage="_Idioma", ThisKey="FkIdioma", OtherKey="IdIdioma", IsForeignKey=true)]
		public Idioma Idioma
		{
			get
			{
				return this._Idioma.Entity;
			}
			set
			{
				Idioma previousValue = this._Idioma.Entity;
				if (((previousValue != value) 
							|| (this._Idioma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Idioma.Entity = null;
						previousValue.Ejemplars.Remove(this);
					}
					this._Idioma.Entity = value;
					if ((value != null))
					{
						value.Ejemplars.Add(this);
						this._FkIdioma = value.IdIdioma;
					}
					else
					{
						this._FkIdioma = default(int);
					}
					this.SendPropertyChanged("Idioma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Obra_Ejemplar", Storage="_Obra", ThisKey="FKObra", OtherKey="IdObra", IsForeignKey=true)]
		public Obra Obra
		{
			get
			{
				return this._Obra.Entity;
			}
			set
			{
				Obra previousValue = this._Obra.Entity;
				if (((previousValue != value) 
							|| (this._Obra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Obra.Entity = null;
						previousValue.Ejemplars.Remove(this);
					}
					this._Obra.Entity = value;
					if ((value != null))
					{
						value.Ejemplars.Add(this);
						this._FKObra = value.IdObra;
					}
					else
					{
						this._FKObra = default(int);
					}
					this.SendPropertyChanged("Obra");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlquilerEjemplars(AlquilerEjemplar entity)
		{
			this.SendPropertyChanging();
			entity.Ejemplar = this;
		}
		
		private void detach_AlquilerEjemplars(AlquilerEjemplar entity)
		{
			this.SendPropertyChanging();
			entity.Ejemplar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Genero")]
	public partial class Genero : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdGenero;
		
		private string _Descripcion;
		
		private EntitySet<Obra> _Obras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdGeneroChanging(int value);
    partial void OnIdGeneroChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Genero()
		{
			this._Obras = new EntitySet<Obra>(new Action<Obra>(this.attach_Obras), new Action<Obra>(this.detach_Obras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGenero", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdGenero
		{
			get
			{
				return this._IdGenero;
			}
			set
			{
				if ((this._IdGenero != value))
				{
					this.OnIdGeneroChanging(value);
					this.SendPropertyChanging();
					this._IdGenero = value;
					this.SendPropertyChanged("IdGenero");
					this.OnIdGeneroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genero_Obra", Storage="_Obras", ThisKey="IdGenero", OtherKey="FKGenero")]
		public EntitySet<Obra> Obras
		{
			get
			{
				return this._Obras;
			}
			set
			{
				this._Obras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Obras(Obra entity)
		{
			this.SendPropertyChanging();
			entity.Genero = this;
		}
		
		private void detach_Obras(Obra entity)
		{
			this.SendPropertyChanging();
			entity.Genero = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Idioma")]
	public partial class Idioma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdIdioma;
		
		private string _Descripcion;
		
		private EntitySet<Ejemplar> _Ejemplars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdIdiomaChanging(int value);
    partial void OnIdIdiomaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Idioma()
		{
			this._Ejemplars = new EntitySet<Ejemplar>(new Action<Ejemplar>(this.attach_Ejemplars), new Action<Ejemplar>(this.detach_Ejemplars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIdioma", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdIdioma
		{
			get
			{
				return this._IdIdioma;
			}
			set
			{
				if ((this._IdIdioma != value))
				{
					this.OnIdIdiomaChanging(value);
					this.SendPropertyChanging();
					this._IdIdioma = value;
					this.SendPropertyChanged("IdIdioma");
					this.OnIdIdiomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idioma_Ejemplar", Storage="_Ejemplars", ThisKey="IdIdioma", OtherKey="FkIdioma")]
		public EntitySet<Ejemplar> Ejemplars
		{
			get
			{
				return this._Ejemplars;
			}
			set
			{
				this._Ejemplars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ejemplars(Ejemplar entity)
		{
			this.SendPropertyChanging();
			entity.Idioma = this;
		}
		
		private void detach_Ejemplars(Ejemplar entity)
		{
			this.SendPropertyChanging();
			entity.Idioma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Obra")]
	public partial class Obra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdObra;
		
		private string _Titulo;
		
		private string _Sinopsis;
		
		private System.Nullable<int> _FKAutor;
		
		private System.Nullable<int> _FKGenero;
		
		private EntitySet<Ejemplar> _Ejemplars;
		
		private EntityRef<Autor> _Autor;
		
		private EntityRef<Genero> _Genero;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdObraChanging(int value);
    partial void OnIdObraChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnSinopsisChanging(string value);
    partial void OnSinopsisChanged();
    partial void OnFKAutorChanging(System.Nullable<int> value);
    partial void OnFKAutorChanged();
    partial void OnFKGeneroChanging(System.Nullable<int> value);
    partial void OnFKGeneroChanged();
    #endregion
		
		public Obra()
		{
			this._Ejemplars = new EntitySet<Ejemplar>(new Action<Ejemplar>(this.attach_Ejemplars), new Action<Ejemplar>(this.detach_Ejemplars));
			this._Autor = default(EntityRef<Autor>);
			this._Genero = default(EntityRef<Genero>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdObra", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdObra
		{
			get
			{
				return this._IdObra;
			}
			set
			{
				if ((this._IdObra != value))
				{
					this.OnIdObraChanging(value);
					this.SendPropertyChanging();
					this._IdObra = value;
					this.SendPropertyChanged("IdObra");
					this.OnIdObraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sinopsis", DbType="VarChar(MAX)")]
		public string Sinopsis
		{
			get
			{
				return this._Sinopsis;
			}
			set
			{
				if ((this._Sinopsis != value))
				{
					this.OnSinopsisChanging(value);
					this.SendPropertyChanging();
					this._Sinopsis = value;
					this.SendPropertyChanged("Sinopsis");
					this.OnSinopsisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKAutor", DbType="Int")]
		public System.Nullable<int> FKAutor
		{
			get
			{
				return this._FKAutor;
			}
			set
			{
				if ((this._FKAutor != value))
				{
					if (this._Autor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKAutorChanging(value);
					this.SendPropertyChanging();
					this._FKAutor = value;
					this.SendPropertyChanged("FKAutor");
					this.OnFKAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FKGenero", DbType="Int")]
		public System.Nullable<int> FKGenero
		{
			get
			{
				return this._FKGenero;
			}
			set
			{
				if ((this._FKGenero != value))
				{
					if (this._Genero.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFKGeneroChanging(value);
					this.SendPropertyChanging();
					this._FKGenero = value;
					this.SendPropertyChanged("FKGenero");
					this.OnFKGeneroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Obra_Ejemplar", Storage="_Ejemplars", ThisKey="IdObra", OtherKey="FKObra")]
		public EntitySet<Ejemplar> Ejemplars
		{
			get
			{
				return this._Ejemplars;
			}
			set
			{
				this._Ejemplars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autor_Obra", Storage="_Autor", ThisKey="FKAutor", OtherKey="IdAutor", IsForeignKey=true)]
		public Autor Autor
		{
			get
			{
				return this._Autor.Entity;
			}
			set
			{
				Autor previousValue = this._Autor.Entity;
				if (((previousValue != value) 
							|| (this._Autor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Autor.Entity = null;
						previousValue.Obras.Remove(this);
					}
					this._Autor.Entity = value;
					if ((value != null))
					{
						value.Obras.Add(this);
						this._FKAutor = value.IdAutor;
					}
					else
					{
						this._FKAutor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Autor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genero_Obra", Storage="_Genero", ThisKey="FKGenero", OtherKey="IdGenero", IsForeignKey=true)]
		public Genero Genero
		{
			get
			{
				return this._Genero.Entity;
			}
			set
			{
				Genero previousValue = this._Genero.Entity;
				if (((previousValue != value) 
							|| (this._Genero.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Genero.Entity = null;
						previousValue.Obras.Remove(this);
					}
					this._Genero.Entity = value;
					if ((value != null))
					{
						value.Obras.Add(this);
						this._FKGenero = value.IdGenero;
					}
					else
					{
						this._FKGenero = default(Nullable<int>);
					}
					this.SendPropertyChanged("Genero");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ejemplars(Ejemplar entity)
		{
			this.SendPropertyChanging();
			entity.Obra = this;
		}
		
		private void detach_Ejemplars(Ejemplar entity)
		{
			this.SendPropertyChanging();
			entity.Obra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Socio")]
	public partial class Socio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSocio;
		
		private string _Apellido;
		
		private string _Nombre;
		
		private string _Email;
		
		private string _Domicilio;
		
		private string _Telefono;
		
		private EntitySet<Alquiler> _Alquilers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSocioChanging(int value);
    partial void OnIdSocioChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDomicilioChanging(string value);
    partial void OnDomicilioChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Socio()
		{
			this._Alquilers = new EntitySet<Alquiler>(new Action<Alquiler>(this.attach_Alquilers), new Action<Alquiler>(this.detach_Alquilers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSocio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSocio
		{
			get
			{
				return this._IdSocio;
			}
			set
			{
				if ((this._IdSocio != value))
				{
					this.OnIdSocioChanging(value);
					this.SendPropertyChanging();
					this._IdSocio = value;
					this.SendPropertyChanged("IdSocio");
					this.OnIdSocioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Domicilio", DbType="VarChar(80)")]
		public string Domicilio
		{
			get
			{
				return this._Domicilio;
			}
			set
			{
				if ((this._Domicilio != value))
				{
					this.OnDomicilioChanging(value);
					this.SendPropertyChanging();
					this._Domicilio = value;
					this.SendPropertyChanged("Domicilio");
					this.OnDomicilioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(50)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Socio_Alquiler", Storage="_Alquilers", ThisKey="IdSocio", OtherKey="FKSocio")]
		public EntitySet<Alquiler> Alquilers
		{
			get
			{
				return this._Alquilers;
			}
			set
			{
				this._Alquilers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alquilers(Alquiler entity)
		{
			this.SendPropertyChanging();
			entity.Socio = this;
		}
		
		private void detach_Alquilers(Alquiler entity)
		{
			this.SendPropertyChanging();
			entity.Socio = null;
		}
	}
}
#pragma warning restore 1591
